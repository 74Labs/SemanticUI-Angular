{"version":3,"sources":["sm-core.js","sm-addons.js","accordion/sm-accordion.js","checkbox/sm-checkbox.js","checkbox/sm-radio.js","dimmer/sm-dimmer.js","dropdown/sm-dropdown.js","embed/sm-embed.js","modal/sm-modal.js","popup/sm-popup.js","progress/sm-progress.js","search/sm-search.js","shape/sm-shape.js","sidebar/sm-sidebar.js","sticky/sm-sticky.js","tab/sm-tab.js","transition/sm-transition.js","rating/sm-rating.js"],"names":["app","factory","bindAttribute","scope","variable","element","attribute","$watch","updated","attr","onEvent","settings","evt","func","existing","angular","isFunction","apply","this","arguments","linkEvents","linkings","scopeVariable","scopeValue","createBind","module","helper","restrict","link","attributes","initBind","ready","createBehavior","method","initBehavior","$","undefined","enabled","value","input","isString","isObject","isDefined","on","async","context","args","Array","prototype","slice","call","$evalAsync","watcher","expression","ignoreUpdate","set","directive","transclude","smHtml","html","replace","template","icon","smAttrs","forEach","val","key","isNumber","smLiveAttrs","setter","smData","data","join","SemanticUI","BEHAVIORS","smAccordionOpen","smAccordionCloseOthers","smAccordionClose","smAccordionToggle","onInit","onOpening","onOpen","onClosing","onClose","onChange","accordion","required","title","active","smCheckboxToggle","smCheckboxCheck","smCheckboxUncheck","smCheckboxIndeterminate","smCheckboxDeterminate","smCheckboxEnable","smCheckboxDisable","model","label","indeterminateValue","checkedValue","uncheckedValue","children","onChecked","onIndeterminate","onDeterminate","onUnchecked","onEnable","onDisable","attrs","modelWatcher","checkbox","enabledWatcher","$children","settingChildren","change","checked","each","i","child","length","smRadioCheck","smRadioEnable","smRadioDisable","name","hasClass","removeClass","smDimmerShow","smDimmerHide","smDimmerToggle","visible","onShow","onHide","visibleWatcher","dimmer","smDropdownToggle","smDropdownShow","smDropdownHide","smDropdownClear","smDropdownHideOthers","smDropdownRestoreDefaults","smDropdownRestoreDefaultText","smDropdownRestoreDefaultValue","smDropdownSaveDefaults","smDropdownSetSelected","smDropdownSetText","smDropdownSetValue","smDropdownBindTouchEvents","smDropdownMouseEvents","smDropdownBindIntent","smDropdownUnbindIntent","smDropdownSetActive","smDropdownSetVisible","smDropdownRemoveActive","smDropdownRemoveVisible","items","defaultText","onAdd","onRemove","onLabelCreate","onLabelSelect","onNoResults","controller","$scope","getValue","item","$$hashKey","hasDefault","findMatchingItem","getText","selected","matching","itemValue","hashMap","dropdown","smEmbedReset","smEmbedShow","smEmbedHide","smEmbedDestroy","source","sourceId","placeholder","onCreate","onDisplay","onPlaceholderDisplay","onEmbed","id","embed","smModalShow","smModalHide","smModalToggle","smModalRefresh","smModalShowDimmer","smModalHideDimmer","smModalHideOthers","smModalHideAll","smModalCacheSizes","smModalSetActive","onVisible","onHidden","onApprove","onDeny","modal","smPopupShow","smPopupHide","smPopupHideAll","smPopupToggle","smPopupReposition","smPopupDestroy","smPopupRemove","smPopup","smPopupTitle","smPopupPosition","smPopupSettings","smPopupOnInit","smPopupOnCreate","smPopupOnRemove","smPopupOnShow","smPopupOnVisible","smPopupOnHide","smPopupOnHidden","popup","smPopupInline","smPopupInlineOnInit","smPopupInlineOnCreate","smPopupInlineOnRemove","smPopupInlineOnShow","smPopupInlineOnVisible","smPopupInlineOnHide","smPopupInlineOnHidden","inline","smPopupDisplaySettings","smPopupDisplayOnInit","smPopupDisplayOnCreate","smPopupDisplayOnRemove","smPopupDisplayOnShow","smPopupDisplayOnVisible","smPopupDisplayOnHide","smPopupDisplayOnHidden","smPopupDisplay","showPercent","onSuccess","onActive","onError","onWarning","smSearchQuery","smSearchCancelQuery","smSearchSearchLocal","smSearchSearchRemote","smSearchSetValue","smSearchShowResults","smSearchHideResults","smSearchDestroy","local","remove","onResultsAdd","onSearchQuery","onResults","onResultsOpen","onResultsClose","remote","apiSettings","url","search","smShapeFlipUp","smShapeFlipDown","smShapeFlipLeft","smShapeFlipRight","smShapeFlipOver","smShapeFlipBack","smShapeSetNextSide","smShapeReset","smShapeQueue","smShapeRepaint","smShapeSetDefaultSide","smShapeSetStageSize","smShapeRefresh","smSidebarShow","smSidebarHide","smSidebarToggle","smSidebarPushPage","smSidebarPullPage","smSidebarAddBodyCss","smSidebarRemoveBodyCss","sidebar","smStickyRefresh","onReposition","onScroll","onStick","onUnstick","onTop","onBottom","sticky","smTabReset","smTabShow","smTabHide","smTabDestroy","tabs","prop","tab","smTransition","smTransitionEvents","smTransitionOther","transition","smRatingSetRating","smRatingDisable","smRatingEnable","smRatingClear","total","type","disabled","onRate","valueWatcher","rating"],"mappings":"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","file":"angular-semantic-ui.js","sourcesContent":["(function(app)\n{\n\n  app.factory('SemanticUI', \n  function SemanticUI() \n  {\n    return {\n      bindAttribute: function(scope, variable, element, attribute)\n      {\n        scope.$watch( variable, function(updated)\n        {\n          element.attr( attribute, updated );\n        });\n      },\n      onEvent: function(settings, evt, func)\n      {\n        settings[ evt ] = (function(existing) \n        {\n          return function EventHandler() \n          {\n            if ( angular.isFunction( existing ) ) \n            {\n              existing.apply( this, arguments );\n            }\n            \n            func.apply( this, arguments );\n          }\n        })( settings[ evt ] );\n      },\n      linkEvents: function(scope, settings, linkings)\n      {\n        for (var evt in linkings)\n        {\n          var scopeVariable = linkings[ evt ];\n\n          this.onEvent( settings, evt, function()\n          {\n            var scopeValue = scope[ scopeVariable ];\n\n            if ( angular.isFunction( scopeValue ) )\n            {\n              scopeValue.apply( this, arguments );\n            }\n          });\n        }\n      },\n      createBind: function(attribute, module)\n      {\n        var helper = this;\n        var scope = {};\n        scope[ attribute ] = '=';\n\n        return {\n          restrict: 'A',\n          scope: scope,\n          link: function(scope, element, attributes) {\n            helper.initBind( scope, attribute, element, module );\n          }\n        };\n      },\n      initBind: function(scope, attribute, element, module)\n      {\n        element.ready(function()\n        {\n          element[ module ]( scope[ attribute ] );\n        });\n      },\n      createBehavior: function(attribute, module, method)\n      {\n        var helper = this;\n        var scope = {};\n        scope[ attribute ] = '=';\n\n        return {\n          restrict: 'A',\n          scope: scope,\n          link: function(scope, element, attributes) {\n            helper.initBehavior( scope, attribute, element, module, method );\n          }\n        };\n      },\n      initBehavior: function(scope, attribute, element, module, method)\n      {\n        // Default settings on the attribute.\n        var settings = {\n          $: undefined,\n          evt: 'click',\n          enabled: true,\n          value: undefined\n        };\n\n        // Grab the value the user passed in.\n        var input = scope[ attribute ];\n        \n        // If the attribute value is a string, take it as the selector\n        if ( angular.isString( input ) ) \n        {\n          settings.$ = input;\n        }\n        // If the attribute value is an object, overwrite the defaults.\n        else if ( angular.isObject( input ) ) \n        {\n          if ( !angular.isString( input.evt ) ) input.evt = settings.evt;\n          if ( !angular.isDefined( input.enabled ) ) input.enabled = settings.enabled;\n\n          settings = input;\n        }\n\n        var onEvent = function() \n        {\n          // If the trigger is currently enabled...\n          if ( settings.enabled ) \n          {\n            // Call the method on the module.\n            $( settings.$ )[ module ]( method, settings.value ); \n          }\n        };\n\n        element.ready(function()\n        {\n          element.on( settings.evt, onEvent );\n        });\n      },\n      async: function(scope, func)\n      {\n        return function() \n        {\n          var context = this;\n          var args = Array.prototype.slice.call( arguments );\n\n          scope.$evalAsync(function()\n          {\n            func.apply( context, args );\n          })\n        }\n      },\n      watcher: function(scope, expression, func, context) \n      {\n        var ignoreUpdate = false;\n\n        scope.$watch( expression, function( updated )\n        {\n          if ( !ignoreUpdate )\n          {\n            func.call( context, updated );\n          }\n\n          ignoreUpdate = false;\n        });\n\n        return {\n          set: function(value)\n          {\n            if ( scope[ expression ] != value )\n            {\n              scope.$evalAsync(function()\n              {\n                scope[ expression ] = value;\n                ignoreUpdate = true;\n              });\n            }\n          }\n        }\n      }\n    };\n  });\n\n})( angular.module('semantic-ui', []) );","(function(app)\n{\n\n  app.directive('smHtml', \n  function SemanticHtml() {\n    return {\n      restrict: 'A',\n      transclude: true,\n      link: function(scope, element, attributes) \n      {\n        scope.$watch( attributes.smHtml, function(value) {\n          element.html( value );\n        });\n      }\n    }\n  });\n\n  app.directive('smButton', \n  function SemanticButton() \n  {\n    return {\n      restrict: 'E',\n      replace: true,\n      transclude: true,\n      template: '<button class=\"ui button\" ng-transclude></button>'\n    };\n  });\n\n  app.directive('smMenuItem',\n  function SemanticItem()\n  {\n    return {\n      restrict: 'E',\n      replace: true,\n      transclude: true,\n      scope: {\n        icon: '@'\n      },\n      template: '<a class=\"item\"><i class=\"{{ icon }} icon\" ng-if=\"icon\"></i><span ng-transclude></span></a>'\n    }\n  });\n\n  app.directive('smAttrs',\n  function SemanticAttrs()\n  {\n    return {\n      restrict: 'A',\n      scope: {\n        smAttrs: '='\n      },\n      link: function(scope, element, attributes) {\n        angular.forEach( scope.smAttrs, function(val, key) {\n          if ( angular.isNumber( val ) || angular.isString( val ) ) {\n            element.attr( key, val ); \n          }\n        });\n      }\n    }\n  });\n\n  app.directive('smLiveAttrs',\n  function SemanticLiveAttrs()\n  {\n    return {\n      restrict: 'A',\n      scope: {\n        smLiveAttrs: '='\n      },\n      link: function(scope, element, attributes) {\n        var expression = function() {\n          return scope.smLiveAttrs;\n        };\n        var setter = function() {\n          angular.forEach( scope.smLiveAttrs, function(val, key) {\n            if ( angular.isNumber( val ) || angular.isString( val ) ) {\n              element.attr( key, val ); \n            }\n          });\n        };\n        scope.$watch( expression, setter, true );\n      }\n    }\n  });\n\n  app.directive('smData',\n  function SemanticData()\n  {\n    return {\n      restrict: 'A',\n      scope: {\n        smData: '='\n      },\n      link: function(scope, element, attributes) {\n        element.data( scope.smData );\n      }\n    }\n  });\n\n  app.directive('smLiveData',\n  function SemanticLiveData()\n  {\n    return {\n      restrict: 'A',\n      scope: {\n        smData: '='\n      },\n      link: function(scope, element, attributes) {\n        var expression = function() {\n          return scope.smData;\n        };\n        var setter = function() {\n          element.data( scope.smData );\n        };\n        scope.$watch( expression, setter, true );\n      }\n    }\n  });\n\n  app.directive('smFlatMenu', \n  function SemanticFlatMenu() {\n    return {\n      restrict: 'E',\n      replace: true,\n      template: [\n        '<div class=\"menu\">',\n        '  <div class=\"item\" ng-repeat=\"item in items\" data-value=\"{{ getValue(item) }}\" sm-html=\"label({item:item})\"></div>',\n        '</div>'\n      ].join('\\n')\n    }\n  });\n\n})( angular.module('semantic-ui') );","(function(app)\n{\n\n  app.directive('smAccordionBind', ['SemanticUI',\n  function SemanticAccordionBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smAccordionBind', 'accordion' );\n  }]);\n\n  var BEHAVIORS = {\n    smAccordionOpen:        'open',\n    smAccordionCloseOthers: 'close others',\n    smAccordionClose:       'close',\n    smAccordionToggle:      'toggle'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'accordion', method );\n    }]);\n  });\n\n  app.directive('smAccordion', ['SemanticUI',\n  function SemanticAccordion(SemanticUI) \n  {\n    return {\n      restrict: 'E',\n      replace: true,\n      transclude: true,\n      scope: {\n        /* Optional */\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onOpening: '=',\n        onOpen: '=',\n        onClosing: '=',\n        onClose: '=',\n        onChange: '='\n      },\n      template: '<div class=\"ui accordion\" ng-transclude></div>',\n      link: function(scope, element, attributes)\n      {\n        element.ready(function()\n        {\n          var settings = scope.settings || {};\n\n          SemanticUI.linkEvents( scope, settings, {\n            onOpening: 'onOpening',\n            onOpen: 'onOpen',\n            onClosing: 'onClosing',\n            onClose: 'onClose',\n            onChange: 'onChange'\n          });\n\n          element.accordion( settings );\n\n          if ( angular.isFunction( scope.onInit ) )\n          {\n            scope.onInit( element );\n          } \n        })\n      }\n    };\n  }]);\n\n  app.directive('smAccordionGroup',\n  function SemanticAccordionGroup() \n  {\n    return {\n      restrict: 'E',\n      required: 'title',\n      transclude: true,\n      scope: {\n        /* Required */\n        title: '=',\n        /* Optional */\n        active: '='\n      },\n      template: [\n        '<div class=\"title\" ng-class=\"{active: active}\">',\n        '  <i class=\"dropdown icon\"></i>',\n        '  {{ title }}',\n        '</div>',\n        '<div class=\"content\" ng-class=\"{active: active}\" ng-transclude>',\n        '</div>'\n      ].join('\\n')\n    }\n  });\n\n})( angular.module('semantic-ui') );\n","(function(app)\n{\n\n  app.directive('smCheckboxBind', ['SemanticUI',\n  function SemanticCheckboxBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smCheckboxBind', 'checkbox' );\n  }]);\n\n  var BEHAVIORS = {\n    smCheckboxToggle:            'toggle',\n    smCheckboxCheck:             'check',\n    smCheckboxUncheck:           'uncheck',\n    smCheckboxIndeterminate:     'indeterminate',\n    smCheckboxDeterminate:       'determinate',\n    smCheckboxEnable:            'enable',\n    smCheckboxDisable:           'disable'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'checkbox', method );\n    }]);\n  });\n\n  app.directive('smCheckbox', ['SemanticUI',\n  function SemanticCheckbox(SemanticUI) \n  {\n    return {\n\n      restrict: 'E',\n\n      required: ['model', 'label'],\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        label: '@',\n        /* Optional */\n        settings: '=',\n        enabled: '=',\n        indeterminateValue: '=',\n        checkedValue: '=',\n        uncheckedValue: '=',\n        children: '@',\n        onInit: '=',\n        /* Events */\n        onChange:        '=',\n        onChecked:       '=',\n        onIndeterminate: '=',\n        onDeterminate:   '=',\n        onUnchecked:     '=',\n        onEnable:        '=',\n        onDisable:       '='\n      },\n\n      template: [\n        '<div class=\"ui checkbox\">',\n        '  <input type=\"checkbox\">',\n        '  <label>{{ label }}</label>',\n        '</div>'\n      ].join('\\n'),\n\n      link: function(scope, element, attrs) \n      {\n        element.ready(function()\n        {\n          var settings = scope.settings || {};\n\n          var checkedValue = function() {\n            return angular.isDefined( scope.checkedValue ) ? scope.checkedValue : true;\n          };\n          var uncheckedValue = function() {\n            return angular.isDefined( scope.uncheckedValue ) ? scope.uncheckedValue : false;\n          };\n          var indeterminateValue = function() {\n            return angular.isDefined( scope.indeterminateValue ) ? scope.indeterminateValue : void 0;\n          };\n\n          var modelWatcher = SemanticUI.watcher( scope, 'model', \n            function(updated) {\n              if ( angular.isDefined( updated ) ) {\n                element.checkbox( updated ? 'set checked' : 'set unchecked' );\n              }\n            }\n          );\n\n          var enabledWatcher = SemanticUI.watcher( scope, 'enabled',\n            function(updated) {\n              if ( angular.isDefined( updated ) ) {\n                element.checkbox( updated ? 'set enabled' : 'set disabled' ); \n              }\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onChecked', \n            function() {\n              modelWatcher.set( checkedValue() );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onUnchecked', \n            function() {\n              modelWatcher.set( uncheckedValue() );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onIndeterminate', \n            function() {\n              modelWatcher.set( indeterminateValue() );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onEnable', \n            function(value) {\n              enabledWatcher.set( true );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onDisable', \n            function(value) {\n              enabledWatcher.set( false );\n            }\n          );\n\n          SemanticUI.linkEvents( scope, settings, {\n            onChange:        'onChange',\n            onChecked:       'onChecked',\n            onIndeterminate: 'onIndeterminate',\n            onDeterminate:   'onDeterminate',\n            onUnchecked:     'onUnchecked',\n            onEnable:        'onEnable',\n            onDisable:       'onDisable'\n          });\n\n          // If the checkbox has children, link the value of this checkbox to the children\n          if ( scope.children )\n          {\n            var $children = $( scope.children );\n            var settingChildren = false;\n\n            SemanticUI.onEvent( settings, 'onChecked',\n              function() {\n                settingChildren = true;\n                $children.checkbox( 'check' );\n                settingChildren = false;\n              }\n            );\n            SemanticUI.onEvent( settings, 'onUnchecked',\n              function() {\n                settingChildren = true;\n                $children.checkbox( 'uncheck' );\n                settingChildren = false;\n              }\n            );\n\n            $children.children('input[type=checkbox], input[type=radio]')\n              .change(function() {\n\n                if ( settingChildren ) {\n                  return;\n                }\n\n                var checked = 0;\n\n                $children.each(function(i, child) {\n                  if ( $( child ).checkbox( 'is checked') ) {\n                    checked++;\n                  }\n                });\n\n                if ( checked === 0 ) {\n                  element.checkbox( 'uncheck' );\n                } \n                else if ( checked === $children.length ) {\n                  element.checkbox( 'check' );\n                }\n                else {\n                  element.checkbox( 'indeterminate' );\n                }\n              })\n            ;\n          }\n\n          // Initialize the element with the given settings.\n          element.checkbox( settings ); \n\n          // Set initial state of the checkbox\n          if ( scope.model == checkedValue() )\n          {\n            element.checkbox( 'set checked' );\n          }\n          else if ( scope.model === indeterminateValue() )\n          {\n            element.checkbox( 'set indeterminate' );\n          }\n\n          if ( angular.isDefined( scope.enabled ) && !scope.enabled )\n          {\n            element.checkbox( 'set disabled' );\n          }\n\n          if ( angular.isFunction( scope.onInit ) ) {\n            scope.onInit( element );\n          }\n        });\n      }\n    }\n  }]);\n\n})( angular.module('semantic-ui') );\n","(function(app)\n{\n\n  app.directive('smRadioBind', ['SemanticUI',\n  function SemanticRadioBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smRadioBind', 'checkbox' );\n  }]);\n\n  var BEHAVIORS = {\n    smRadioCheck:             'check',\n    smRadioEnable:            'enable',\n    smRadioDisable:           'disable'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'checkbox', method );\n    }]);\n  });\n\n  app.directive('smRadio', ['SemanticUI',\n  function SemanticRadio(SemanticUI) \n  {\n    return {\n\n      restrict: 'E',\n\n      required: ['value', 'label', 'name', 'model'],\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        label: '@',\n        name: '@',\n        value: '=',\n        /* Optional */\n        settings: '=',\n        enabled: '=',\n        onInit: '=',\n        /* Events */\n        onChange:        '=',\n        onChecked:       '=',\n        onUnchecked:     '=',\n        onEnable:        '=',\n        onDisable:       '='\n      },\n\n      template: [\n        '<div class=\"ui radio checkbox\">',\n        '  <input name=\"{{ name }}\" type=\"radio\">',\n        '  <label>{{ label }}</label>',\n        '</div>'\n      ].join('\\n'),\n\n      link: function(scope, element, attrs) \n      {\n        element.ready(function()\n        {\n          var settings = scope.settings || {};\n\n          var modelWatcher = SemanticUI.watcher( scope, 'model', \n            function(updated) {\n              if ( updated === scope.value ) {\n                element.checkbox( 'set checked' );\n              }\n            }\n          );\n\n          var enabledWatcher = SemanticUI.watcher( scope, 'enabled',\n            function(updated) {\n              if ( angular.isDefined( updated ) ) {\n                element.checkbox( updated ? 'set enabled' : 'set disabled' ); \n              }\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onChecked', \n            function() {\n              modelWatcher.set( scope.value );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onEnable', \n            function(value) {\n              enabledWatcher.set( true );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onDisable', \n            function(value) {\n              enabledWatcher.set( false );\n            }\n          );\n\n          SemanticUI.linkEvents( scope, settings, {\n            onChange:        'onChange',\n            onChecked:       'onChecked',\n            onUnchecked:     'onUnchecked',\n            onEnable:        'onEnable',\n            onDisable:       'onDisable'\n          });\n\n          // Initialize the element with the given settings.\n          element.checkbox( settings ); \n\n          // Set initial state of the radio\n          if ( scope.model === scope.value )\n          {\n            element.checkbox( 'set checked' );\n          }\n\n          // If the radio is a slider, remove the radio class \n          if ( element.hasClass( 'slider' ) )\n          {\n            element.removeClass( 'radio' );\n          }\n\n          if ( angular.isDefined( scope.enabled ) && !scope.enabled )\n          {\n            element.checkbox( 'set disabled' );\n          }\n\n          if ( angular.isFunction( scope.onInit ) ) {\n            scope.onInit( element );\n          }\n        });\n      }\n    }\n  }]);\n\n})( angular.module('semantic-ui') );\n","(function(app)\n{\n\n  app.directive('smDimmerBind', ['SemanticUI', \n  function SemanticDimmerBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smDimmerBind', 'dimmer' );\n  }]);\n\n  var BEHAVIORS = {\n    smDimmerShow:           'show',\n    smDimmerHide:           'hide',\n    smDimmerToggle:         'toggle'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'dimmer', method );\n    }]);\n  });\n\n  app.directive('smDimmer', ['SemanticUI',\n  function SemanticDimmer(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        visible: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onShow: '=',\n        onHide: '=',\n        onChange: '='\n      },\n\n      template: '<div class=\"ui dimmer\" ng-transclude></div>',\n\n      link: function(scope, element, attributes) \n      {\n        var settings = scope.settings || {};\n\n        var visibleWatcher = SemanticUI.watcher( scope, 'visible', \n          function(updated) {\n            element.dimmer( updated ? 'show' : 'hide' );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onShow', \n          function(value) {\n            visibleWatcher.set( true );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onHide', \n          function(value) {\n            visibleWatcher.set( false );\n          }\n        );\n\n        SemanticUI.linkEvents( scope, settings, {\n          onShow:   'onShow',\n          onHide:   'onHide',\n          onChange: 'onChange'\n        });\n\n        element.dimmer( settings );\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n\n","(function(app)\n{\n\n  app.directive('smDropdownBind', ['SemanticUI',\n  function SemanticDropdownBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smDropdownBind', 'dropdown' );\n  }]);\n\n  var BEHAVIORS = {\n    smDropdownToggle:               'toggle',\n    smDropdownShow:                 'show',\n    smDropdownHide:                 'hide',\n    smDropdownClear:                'clear',\n    smDropdownHideOthers:           'hide others',\n    smDropdownRestoreDefaults:      'restore defaults',\n    smDropdownRestoreDefaultText:   'restore default text',\n    smDropdownRestoreDefaultValue:  'restore default value',\n    smDropdownSaveDefaults:         'save defaults',\n    smDropdownSetSelected:          'set selected',\n    smDropdownSetText:              'set text',\n    smDropdownSetValue:             'set value',\n    smDropdownBindTouchEvents:      'bind touch events',\n    smDropdownMouseEvents:          'mouse events',\n    smDropdownBindIntent:           'bind intent',\n    smDropdownUnbindIntent:         'unbind intent',\n    smDropdownSetActive:            'set active',\n    smDropdownSetVisible:           'set visible',\n    smDropdownRemoveActive:         'remove active',\n    smDropdownRemoveVisible:        'remove visible'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'dropdown', method );\n    }]);\n  });\n\n  app.directive('smDropdown', ['SemanticUI',\n  function SemanticDropdown(SemanticUI) \n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        items: '=',\n        label: '&',\n        value: '&',\n        /* Optional */\n        settings: '=',\n        defaultText: '=',\n        onInit: '=',\n        /* Events */\n        onChange: '=',\n        onAdd: '=',\n        onRemove: '=',\n        onLabelCreate: '=',\n        onLabelSelect: '=',\n        onNoResults: '=',\n        onShow: '=',\n        onHide: '='\n      },\n\n      template: [\n        '<div class=\"ui dropdown\">',\n          '<span class=\"text\" ng-class=\"{default: hasDefault()}\" sm-html=\"getText()\"></span>',\n          '<i class=\"dropdown icon\"></i>',\n          '<sm-flat-menu></sm-flat-menu>',\n        '</div>'\n      ].join('\\n'),\n\n      controller: function($scope) \n      {\n        // Returns the value to be placed in the data-value attribute. If the computed value has a $$hashKey,\n        // then return the hashKey. This enables the exact instance of the item to be set to the model.\n        $scope.getValue = function(item)\n        {\n          // Computes the value given the expression in the 'value' attribute\n          var value = $scope.value({item: item});\n\n          return value ? value.$$hashKey || value : value;\n        };\n\n        // Determines whether this dropdown should currently display the default text.\n        $scope.hasDefault = function() \n        {\n          if ( !$scope.defaultText ) {\n            return false;\n          }\n          if ( $scope.findMatchingItem( $scope.model ) ) {\n            return false;\n          }\n          return true;\n        }; \n\n        // Gets the current text for the drop down. If the current model has a value which is found\n        // in the items, the appropriate item's label is displayed. Otherwise return the default text.\n        $scope.getText = function() \n        {\n          var selected = $scope.findMatchingItem( $scope.model );\n\n          if ( selected ) \n          {\n            return $scope.label({item: selected});\n          }\n\n          return $scope.defaultText;\n        };\n\n        // Finds an item instance that has the exact same value as the given value.\n        $scope.findMatchingItem = function(value) \n        {\n          var matching = null;\n\n          angular.forEach( $scope.items, function(item) \n          {\n            var itemValue = $scope.value({item: item});\n\n            if ( itemValue === value ) \n            {\n              matching = item;\n            }\n          });\n          return matching;\n        };\n      },\n      link: function(scope, element, attrs) \n      {\n        var hashMap = {};\n        var settings = scope.settings || {};\n\n        // When the model changes, set the value on the drop down\n        var modelWatcher = SemanticUI.watcher( scope, 'model', \n          function(updated) {\n            element.dropdown( 'set value', updated );\n          }\n        );\n\n        // Inject an onChange function into the settings which sets the model value\n        // and causes the scope to be updated.\n        SemanticUI.onEvent( settings, 'onChange', \n          function(value) {\n            modelWatcher.set( value in hashMap ? hashMap[ value ] : value );\n          }\n        );\n\n        SemanticUI.linkEvents( scope, settings, {\n          onChange:       'onChange',\n          onAdd:          'onAdd',\n          onRemove:       'onRemove',\n          onLabelCreate:  'onLabelCreate',\n          onLabelSelect:  'onLabelSelect',\n          onNoResults:    'onNoResults',\n          onShow:         'onShow',\n          onHide:         'onHide'\n        });\n\n        // When items changes, rebuild the hashMap\n        scope.$watch( 'items', function(updated)\n        {\n          hashMap = {};\n\n          angular.forEach( updated, function(item)\n          {\n            if ( item.$$hashKey )\n            {\n              hashMap[ item.$$hashKey ] = item;\n            }\n          });\n\n        }, true );\n\n        // Initialize the element with the given settings.\n        element.dropdown( settings ); \n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      }\n    }\n  }]);\n\n})( angular.module('semantic-ui') );\n","(function(app)\n{\n\n  app.directive('smEmbedBind', ['SemanticUI', \n  function SemanticEmbedBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smEmbedBind', 'embed' );\n  }]);\n\n  var BEHAVIORS = {\n    smEmbedReset:     'reset',\n    smEmbedShow:      'show',\n    smEmbedHide:      'hide',\n    smEmbedDestroy:   'destroy'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'embed', method );\n    }]);\n  });\n\n  app.directive('smEmbed', ['SemanticUI',\n  function SemanticEmbed(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        source: '@',\n        sourceId: '@',\n        placeholder: '@',\n        icon: '@',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onCreate: '=',\n        onDisplay: '=',\n        onPlaceholderDisplay: '=',\n        onEmbed: '='\n      },\n\n      template: '<div class=\"ui embed\"></div>',\n\n      link: function(scope, element, attributes) \n      {\n        var settings = scope.settings || {};\n\n        if ( scope.source ) settings.source = scope.source;\n        if ( scope.sourceId ) settings.id = scope.sourceId;\n        if ( scope.placeholder ) settings.placeholder = scope.placeholder;\n        if ( scope.icon ) settings.icon = scope.icon;\n\n        SemanticUI.linkEvents( scope, settings, {\n          onCreate:             'onCreate',\n          onDisplay:            'onDisplay',\n          onPlaceholderDisplay: 'onPlaceholderDisplay',\n          onEmbed:              'onEmbed'\n        });\n\n        element.embed( settings );\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n\n","(function(app)\n{\n\n  app.directive('smModalBind', ['SemanticUI',\n  function SemanticModalBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smModalBind', 'modal' );\n  }]);\n\n  var BEHAVIORS = {\n    smModalShow:        'show',\n    smModalHide:        'hide',\n    smModalToggle:      'toggle',\n    smModalRefresh:     'refresh',\n    smModalShowDimmer:  'show dimmer',\n    smModalHideDimmer:  'hide dimmer',\n    smModalHideOthers:  'hide others',\n    smModalHideAll:     'hide all',\n    smModalCacheSizes:  'cache sizes',\n    smModalSetActive:   'set active'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'modal', method );\n    }]);\n  });\n\n  app.directive('smModal', ['SemanticUI',\n  function SemanticModal(SemanticUI) \n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        visible: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onShow: '=',\n        onVisible: '=',\n        onHide: '=',\n        onHidden: '=',\n        onApprove: '=',\n        onDeny: '='\n      },\n\n      template: '<div class=\"ui modal\" ng-transclude></div>',\n\n      link: function(scope, element, attrs)\n      {\n        var settings = scope.settings || {};\n\n        var visibleWatcher = SemanticUI.watcher( scope, 'visible', \n          function(updated) {\n            element.modal( updated ? 'show' : 'hide' );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onHide', \n          function() {\n            visibleWatcher.set( false );\n          }\n        );\n\n        SemanticUI.linkEvents( scope, settings, {\n          onShow:    'onShow',\n          onVisible: 'onVisible',\n          onHide:    'onHide',\n          onHidden:  'onHidden',\n          onApprove: 'onApprove',\n          onDeny:    'onDeny'\n        });\n\n        // Initialize the element with the given settings.\n        element.modal( settings );\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      }\n    }\n  }]);\n\n\n})( angular.module('semantic-ui') );\n","(function(app)\n{\n\n  app.directive('smPopupBind', ['SemanticUI',\n  function SemanticModalBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smPopupBind', 'popup' );\n  }]);\n\n  var BEHAVIORS = {\n    smPopupShow:        'show',\n    smPopupHide:        'hide',\n    smPopupHideAll:     'hide all',\n    smPopupToggle:      'toggle',\n    smPopupReposition:  'reposition',\n    smPopupDestroy:     'destroy',\n    smPopupRemove:      'remove popup'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'popup', method );\n    }]);\n  });\n\n  // An attribute directive which displays a popup for this element.\n  app.directive('smPopup', ['SemanticUI',\n  function SemanticPopup(SemanticUI)\n  {\n    return {\n      restrict: 'A',\n      scope: {\n        /* Required */\n        smPopup: '=',\n        /* Optional */\n        smPopupTitle: '=',\n        smPopupPosition: '@',\n        smPopupSettings: '=',\n        smPopupOnInit: '=',\n        /* Events */\n        smPopupOnCreate: '=',\n        smPopupOnRemove: '=',\n        smPopupOnShow: '=',\n        smPopupOnVisible: '=',\n        smPopupOnHide: '=',\n        smPopupOnHidden: '='\n      },\n      link: function(scope, element, attributes) \n      {\n        var settings = scope.smPopupSettings || {};\n\n        SemanticUI.bindAttribute( scope, 'smPopup', element, 'data-content' );\n        SemanticUI.bindAttribute( scope, 'smPopupTitle', element, 'data-title' );\n        SemanticUI.bindAttribute( scope, 'smPopupPosition', element, 'data-position' );\n\n        SemanticUI.linkEvents( scope, settings, {\n          onCreate:  'smPopupOnCreate',\n          onRemove:  'smPopupOnRemove',\n          onShow:    'smPopupOnShow',\n          onVisible: 'smPopupOnVisible',\n          onHide:    'smPopupOnHide',\n          onHidden:  'smPopupOnHidden'\n        });\n\n        element.popup( settings );\n\n        if ( angular.isFunction( scope.smPopupOnInit ) ) \n        {\n          scope.smPopupOnInit( element );\n        }\n      }\n    };\n  }]);\n\n  // An attribute directive to show the detached popup which follows this element.\n  app.directive('smPopupInline', ['SemanticUI',\n  function SemanticPopupInline(SemanticUI) \n  {\n    return {\n      restrict: 'A',\n      scope: {\n        /* Optional */\n        smPopupInline: '=',\n        smPopupInlineOnInit: '=',\n        /* Events */\n        smPopupInlineOnCreate: '=',\n        smPopupInlineOnRemove: '=',\n        smPopupInlineOnShow: '=',\n        smPopupInlineOnVisible: '=',\n        smPopupInlineOnHide: '=',\n        smPopupInlineOnHidden: '='\n      },\n      link: function(scope, element, attributes) \n      {\n        var settings = scope.smPopupInline || {};\n\n        SemanticUI.linkEvents( scope, settings, {\n          onCreate:  'smPopupInlineOnCreate',\n          onRemove:  'smPopupInlineOnRemove',\n          onShow:    'smPopupInlineOnShow',\n          onVisible: 'smPopupInlineOnVisible',\n          onHide:    'smPopupInlineOnHide',\n          onHidden:  'smPopupInlineOnHidden'\n        });\n\n        settings.inline = true;\n\n        element.popup( settings );\n\n        if ( angular.isFunction( scope.smPopupInlineOnInit ) ) {\n          scope.smPopupInlineOnInit( element );\n        }\n      }\n    };\n  }]);\n\n  // An attribute directive to show a detached popup over this element given it's name.\n  app.directive('smPopupDisplay', ['SemanticUI',\n  function SemanticPopupDisplay(SemanticUI) \n  {\n    return {\n      restrict: 'A',\n      scope: {\n        /* Optional */\n        smPopupDisplaySettings: '=',\n        smPopupDisplayOnInit: '=',\n        /* Events */\n        smPopupDisplayOnCreate: '=',\n        smPopupDisplayOnRemove: '=',\n        smPopupDisplayOnShow: '=',\n        smPopupDisplayOnVisible: '=',\n        smPopupDisplayOnHide: '=',\n        smPopupDisplayOnHidden: '='\n      },\n      link: function(scope, element, attributes) \n      {\n        var settings = scope.smPopupDisplaySettings || {};\n\n        SemanticUI.linkEvents( scope, settings, {\n          onCreate:  'smPopupDisplayOnCreate',\n          onRemove:  'smPopupDisplayOnRemove',\n          onShow:    'smPopupDisplayOnShow',\n          onVisible: 'smPopupDisplayOnVisible',\n          onHide:    'smPopupDisplayOnHide',\n          onHidden:  'smPopupDisplayOnHidden'\n        });\n\n        settings.popup = '[data-popup-named=\"' + attributes.smPopupDisplay + '\"]';\n\n        element.popup( settings );\n\n        if ( angular.isFunction( scope.smPopupDisplayOnInit ) ) {\n          scope.smPopupDisplayOnInit( element );\n        }\n      }\n    };\n  }]);\n\n  // An element directive for a popup, can be used after an element or can be named and used with sm-popup-display.\n  app.directive('smPopupDetached', \n  function SemanticPopupDetached() \n  {\n    return {\n      restrict: 'E',\n      replace: true,\n      transclude: true,\n      scope: {\n        name: '@'\n      },\n      template: '<div class=\"ui special popup\" data-popup-named=\"{{ name }}\" ng-transclude></div>'\n    };\n  });\n\n})( angular.module('semantic-ui') );\n","(function(app)\n{\n\n  app.directive('smProgressBind', ['SemanticUI',\n  function SemanticModalBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smProgressBind', 'progress' );\n  }]);\n\n  var BEHAVIORS = {\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'progress', method );\n    }]);\n  });\n\n  app.directive('smProgress', ['SemanticUI',\n  function SemanticProgress(SemanticUI) \n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Required */\n        value: '=',\n        /* Optional */\n        showPercent: '@',\n        onInit: '=',\n        /* Events */\n        onChange: '=',\n        onSuccess: '=',\n        onActive: '=',\n        onError: '=',\n        onWarning: '='\n      },\n\n      template: [\n        '<div class=\"ui progress\">',\n        '  <div class=\"bar\" style=\"transition-duration: 300ms; -webkit-transition-duration: 300ms; width: {{ value }}%;\">',\n        '    <div class=\"progress\" ng-if=\"showPercent\">{{ value }}%</div>',\n        '  </div>',\n        '  <div class=\"label\" ng-transclude></div>',\n        '</div>'\n      ].join('\\n'),\n\n      link: function(scope, element, attributes)\n      {\n        var settings = scope.settings || {};\n\n        SemanticUI.linkEvents( scope, settings, {\n          onChange:   'onChange',\n          onSuccess:  'onSuccess',\n          onActive:   'onActive',\n          onError:    'onError',\n          onWarning:  'onWarning'\n        });\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n\n\n","(function(app)\n{\n\n  app.directive('smSearchBind', ['SemanticUI', \n  function SemanticSearchBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smSearchBind', 'search' );\n  }]);\n\n  var BEHAVIORS = {\n    smSearchQuery:        'query',\n    smSearchCancelQuery:  'cancel query',\n    smSearchSearchLocal:  'search local',\n    smSearchSearchRemote: 'search remote',\n    smSearchSetValue:     'set value',\n    smSearchShowResults:  'show results',\n    smSearchHideResults:  'hide results',\n    smSearchDestroy:      'destroy'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'search', method );\n    }]);\n  });\n\n  app.directive('smSearch', ['SemanticUI',\n  function SemanticSearch(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        /* Required */\n        value: '=',\n        /* Optional */\n        icon: '@',\n        placeholder: '@',\n        local: '=',\n        remove: '@',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onResultsAdd: '=',\n        onSearchQuery: '=',\n        onResults: '=',\n        onResultsOpen: '=',\n        onResultsClose: '='\n      },\n\n      template: [\n        '<div class=\"ui search\">',\n        '  <div class=\"ui icon input\">',\n        '    <input class=\"prompt\" type=\"text\" placeholder=\"{{ placeholder }}\" ng-model=\"value\">',\n        '    <i class=\"{{ icon }} icon\"></i>',\n        '  </div>',\n        '  <div class=\"results\"></div>',\n        '</div>'\n      ].join('\\n'),\n\n      controller: function($scope)\n      {\n        $scope.icon = $scope.icon || 'search';\n      },\n\n      link: function(scope, element, attributes) \n      {\n        var settings = scope.settings || {};\n\n        if ( scope.local )\n        {\n          settings.source = scope.local;\n        }\n\n        if ( scope.remote )\n        {\n          settings.apiSettings = {\n            url: scope.remote\n          };\n        }\n\n        SemanticUI.linkEvents( scope, settings, {\n          onResultsAdd:     'onResultsAdd',\n          onSearchQuery:    'onSearchQuery',\n          onResults:        'onResults',\n          onResultsOpen:    'onResultsOpen',\n          onResultsClose:   'onResultsClose'\n        });\n\n        element.search( settings );\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n\n","(function(app)\n{\n\n  app.directive('smShapeBind', ['SemanticUI', \n  function SemanticShapeBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smShapeBind', 'shape' );\n  }]);\n\n  var BEHAVIORS = {\n    smShapeFlipUp:          'flip up',\n    smShapeFlipDown:        'flip down',\n    smShapeFlipLeft:        'flip left',\n    smShapeFlipRight:       'flip right',\n    smShapeFlipOver:        'flip over',\n    smShapeFlipBack:        'flip back',\n    smShapeSetNextSide:     'set next side',\n    smShapeReset:           'reset',\n    smShapeQueue:           'queue',\n    smShapeRepaint:         'repaint',\n    smShapeSetDefaultSide:  'set default side',\n    smShapeSetStageSize:    'set stage size',\n    smShapeRefresh:         'refresh'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'shape', method );\n    }]);\n  });\n\n})( angular.module('semantic-ui') );\n\n\n","(function(app)\n{\n\n  app.directive('smSidebarBind', ['SemanticUI', \n  function SemanticSidebarBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smSidebarBind', 'sidebar' );\n  }]);\n\n  var BEHAVIORS = {\n    smSidebarShow:           'show',\n    smSidebarHide:           'hide',\n    smSidebarToggle:         'toggle',\n    smSidebarPushPage:       'push page',\n    smSidebarPullPage:       'pull page',\n    smSidebarAddBodyCss:     'add body css',\n    smSidebarRemoveBodyCss:  'remove body css'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'sidebar', method );\n    }]);\n  });\n\n  app.directive('smSidebar', ['SemanticUI',\n  function SemanticSidebar(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        /* Optional */\n        visible: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onVisible: '=',\n        onShow: '=',\n        onChange: '=',\n        onHide: '=',\n        onHidden: '='\n      },\n\n      template: '<sm-flat-menu class=\"ui sidebar\"></sm-flat-menu>',\n\n      link: function(scope, element, attributes)\n      {\n        var settings = scope.settings || {};\n\n        var visibleWatcher = SemanticUI.watcher( scope, 'visible', \n          function(updated) {\n            element.sidebar( updated ? 'show' : 'hide' );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onHide', \n          function() {\n            visibleWatcher.set( false );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onShow', \n          function() {\n            visibleWatcher.set( true );\n          }\n        );\n\n        SemanticUI.linkEvents( scope, settings, {\n          onVisible: 'onVisible',\n          onShow:    'onShow',\n          onChange:  'onChange',\n          onHide:    'onHide',\n          onHidden:  'onHidden'\n        });\n\n        // Initialize the element with the given settings.\n        element.sidebar( settings );\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n","(function(app)\n{\n\n  app.directive('smStickyBind', ['SemanticUI', \n  function SemanticStickyBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smStickyBind', 'sticky' );\n  }]);\n\n  var BEHAVIORS = {\n    smStickyRefresh:   'refresh'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'sticky', method );\n    }]);\n  });\n\n  app.directive('smSticky', ['SemanticUI',\n  function SemanticSticky(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onReposition: '=',\n        onScroll: '=',\n        onStick: '=',\n        onUnstick: '=',\n        onTop: '=',\n        onBottom: '='\n      },\n\n      template: '<div class=\"ui sticky\" ng-transclude></div>',\n\n      link: function(scope, element, attributes) \n      {\n        element.ready(function()\n        {\n          var settings = scope.settings || {};\n\n          SemanticUI.linkEvents( scope, settings, {\n            onReposition:   'onReposition',\n            onScroll:       'onScroll',\n            onStick:        'onStick',\n            onStick:        'onStick',\n            onTop:          'onTop',\n            onBottom:       'onBottom'\n          });\n\n          element.sticky( settings );\n\n          if ( angular.isFunction( scope.onInit ) ) {\n            scope.onInit( element );\n          }\n        });\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n\n","(function(app)\n{\n\n  app.directive('smTabBind', ['SemanticUI', \n  function SemanticTabBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smTabBind', 'tab' );\n  }]);\n\n  var BEHAVIORS = {\n    smTabReset:     'reset',\n    smTabShow:      'show',\n    smTabHide:      'hide',\n    smTabDestroy:   'destroy'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'tab', method );\n    }]);\n  });\n\n  app.directive('smTabMenu', ['SemanticUI', \n  function SemanticTabMenu(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        tabs: '=',\n        active: '@'\n      },\n\n      template: [\n        '<div class=\"ui menu\">',\n        '  <a class=\"item\" ng-repeat=\"(name, title) in tabs\" ng-class=\"{active: name === active}\" data-tab=\"{{ name }}\">{{ title }}</a>',\n        '</div>'\n      ].join('\\n'),\n\n      controller: function($scope)\n      {\n        if ( !($scope.active in $scope.tabs) )\n        {\n          for (var prop in $scope.tabs)\n          {\n            $scope.active = prop;\n            break;\n          }\n        }\n      },\n\n      link: function(scope, element, attributes)\n      {\n        element.ready(function()\n        {\n          var settings = scope.settings || {};\n\n          element.children('.item').tab( settings );\n        });\n      }\n    }\n  }]);\n\n  app.directive('smTab', ['SemanticUI',\n  function SemanticTab(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        name: '@'\n      },\n\n      template: '<div class=\"ui bottom attached tab segment\" data-tab=\"{{ name }}\" ng-transclude></div>'\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n\n","(function(app)\n{\n\n  // Transitions: scale, fade, flip, drop, fly, swing, browse, slide, jiggle, flash, shake, pulse, tada, bounce\n\n  app.directive('smTransition', ['SemanticUI',\n  function SemanticTransition(SemanticUI)\n  {\n    return {\n      restrict: 'A',\n      scope: {\n        smTransition: '@',\n        smTransitionEvents: '@',\n        smTransitionOther: '@'\n      },\n      link: function(scope, element, attributes)\n      {\n        scope.smTransitionEvents = scope.smTransitionEvents || 'click';\n\n        element.on( scope.smTransitionEvents, function()\n        {\n          ( scope.smTransitionOther ? $( scope.smTransitionOther ) : element ).transition( scope.smTransition );\n        });\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );","(function(app)\n{\n\n  app.directive('smRatingBind', ['SemanticUI', \n  function SemanticRatingBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smRatingBind', 'rating' );\n  }]);\n\n  var BEHAVIORS = {\n    smRatingSetRating:  'set rating',\n    smRatingDisable:    'disable',\n    smRatingEnable:     'enable',\n    smRatingClear:      'clear rating'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI) \n    {\n      return SemanticUI.createBehavior( directive, 'rating', method );\n    }]);\n  });\n\n  app.directive('smRating', ['SemanticUI',\n  function SemanticRating(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        /* Required */\n        value: '=',\n        total: '=',\n        /* Optional */\n        type: '@',\n        disabled: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onRate: '='\n      },\n\n      template: '<div class=\"ui rating {{ type }}\" data-rating=\"{{ value }}\" data-max-rating=\"{{ total }}\"></div>',\n\n      link: function(scope, element, attributes) \n      {\n        element.ready(function() \n        {\n          var settings = scope.settings || {};\n\n          var disabledWatcher = SemanticUI.watcher( scope, 'disabled', \n            function(updated) {\n              element.rating( updated ? 'disable' : 'enable' );\n            }\n          );\n\n          var valueWatcher = SemanticUI.watcher( scope, 'value', \n            function(updated) {\n              element.rating( 'set rating', updated );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onRate', \n            function(value) {\n              valueWatcher.set( value );\n            }\n          );\n\n          SemanticUI.linkEvents( scope, settings, {\n            onRate: 'onRate'\n          });\n\n          element.rating( settings );\n\n          if ( angular.isFunction( scope.onInit ) ) {\n            scope.onInit( element );\n          }\n        });\n      }\n    };\n  }]);\n\n})( angular.module('semantic-ui') );\n\n\n"],"sourceRoot":"/source/"}